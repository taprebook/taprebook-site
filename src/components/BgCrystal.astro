---
/**
 * Soft “icy crystal” background:
 * - Large blurred polygons (SVG) with gradient fills
 * - Subtle parallax on scroll + very gentle slow drift
 * - Edge fade + micro grain so it feels premium, not flat
 * - No external libraries
 */
---

<style>
  .bg-wrap {
    position: fixed;
    inset: 0;
    z-index: -10;
    pointer-events: none;
    overflow: hidden;
    /* slight cool tint behind everything */
    background: radial-gradient(120% 100% at 50% 0%, #f9fcff 0%, #f3f8ff 40%, #eef6ff 70%, #ffffff 100%);
  }

  /* SVG scales to viewport, keeps high fidelity on retina */
  svg.bg {
    position: absolute;
    inset: -10% -10% 0 -10%; /* bleed out so edges never show */
    width: 120%;
    height: 120%;
    filter: saturate(1.05) contrast(1.03);
  }

  /* ultra-subtle animated drift */
  @keyframes driftA { from { transform: translate3d(0,0,0); } to { transform: translate3d(60px, -20px, 0); } }
  @keyframes driftB { from { transform: translate3d(0,0,0); } to { transform: translate3d(-50px, 25px, 0); } }
  @keyframes driftC { from { transform: translate3d(0,0,0); } to { transform: translate3d(30px, 35px, 0); } }

  .layer-a { animation: driftA 36s ease-in-out infinite alternate; }
  .layer-b { animation: driftB 44s ease-in-out infinite alternate; }
  .layer-c { animation: driftC 52s ease-in-out infinite alternate; }

  /* Very light grain so large gradients don’t band */
  .grain {
    position: absolute;
    inset: 0;
    opacity: .04;
    mix-blend-mode: overlay;
    background-image: url('data:image/svg+xml;utf8,\
<svg xmlns="http://www.w3.org/2000/svg" width="140" height="140">\
  <filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="2"/></filter>\
  <rect width="100%" height="100%" filter="url(#n)"/>\
</svg>');
    background-size: 220px 220px;
  }

  /* Gentle edge fade so content rests on white */
  .vignette {
    position: absolute; inset: 0;
    background:
      linear-gradient(to bottom, rgba(255,255,255,.0) 0%, rgba(255,255,255,.25) 70%, rgba(255,255,255,.65) 100%),
      radial-gradient(130% 85% at 50% 0%, rgba(255,255,255,0) 60%, rgba(255,255,255,.25) 100%);
  }
</style>

<div class="bg-wrap" aria-hidden="true">
  <!-- Main SVG composition -->
  <svg class="bg" viewBox="0 0 1200 900" preserveAspectRatio="xMidYMid slice">
    <defs>
      <!-- Soft cool palette, close to your reference -->
      <linearGradient id="g1" x1="0" y1="0" x2="1" y2="1">
        <stop offset="0%"  stop-color="#DCEEFF"/>
        <stop offset="60%" stop-color="#C9E0FB"/>
        <stop offset="100%" stop-color="#B6D4F6"/>
      </linearGradient>

      <linearGradient id="g2" x1="1" y1="0" x2="0" y2="1">
        <stop offset="0%"  stop-color="#EAF4FF"/>
        <stop offset="70%" stop-color="#D6E8FA"/>
        <stop offset="100%" stop-color="#C3DCF4"/>
      </linearGradient>

      <linearGradient id="g3" x1="0" y1="1" x2="1" y2="0">
        <stop offset="0%"  stop-color="#F5FAFF"/>
        <stop offset="55%" stop-color="#E7F2FF"/>
        <stop offset="100%" stop-color="#D0E6FA"/>
      </linearGradient>

      <!-- Big blur for glassy look -->
      <filter id="blurL"><feGaussianBlur stdDeviation="40" /></filter>
      <filter id="blurS"><feGaussianBlur stdDeviation="22" /></filter>

      <!-- Clip with big diagonals to evoke low-poly feel without hard edges -->
      <clipPath id="clipTop">
        <polygon points="0,0 1200,0 1200,420 820,350 620,230 360,280 120,220 0,300"/>
      </clipPath>
      <clipPath id="clipMid">
        <polygon points="0,260 220,340 520,360 760,440 1200,420 1200,760 0,760"/>
      </clipPath>
      <clipPath id="clipBot">
        <polygon points="0,720 1200,760 1200,900 0,900"/>
      </clipPath>
    </defs>

    <!-- Top crystalline sheet -->
    <g clip-path="url(#clipTop)" class="layer-a" filter="url(#blurL)" opacity=".85">
      <rect x="-80" y="-40" width="1400" height="620" fill="url(#g1)"/>
    </g>

    <!-- Mid translucent planes -->
    <g clip-path="url(#clipMid)" class="layer-b" filter="url(#blurS)" opacity=".80">
      <rect x="-120" y="220" width="1500" height="520" fill="url(#g2)"/>
    </g>

    <!-- Bottom lift / glow -->
    <g clip-path="url(#clipBot)" class="layer-c" filter="url(#blurL)" opacity=".9">
      <rect x="-100" y="640" width="1500" height="400" fill="url(#g3)"/>
    </g>
  </svg>

  <div class="grain"></div>
  <div class="vignette"></div>
</div>

<script type="module" client:load>
  // Subtle parallax: move SVG slightly with scroll
  const svg = document.querySelector('svg.bg');
  let lastY = 0;

  function onScroll() {
    const y = window.scrollY || 0;
    const dy = (y - lastY) * 0.04;
    // translate a touch so it feels alive but not busy
    svg.style.transform = `translate3d(0, ${-y * 0.04}px, 0)`;
    lastY = y - dy;
  }

  window.addEventListener('scroll', onScroll, { passive: true });
  onScroll();
</script>
