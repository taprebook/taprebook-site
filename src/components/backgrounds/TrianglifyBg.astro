---
/* Low-poly “icy triangles” background – CDN load (no npm needed) */
---

<style>
  .tri-bg-wrap { position: fixed; inset: 0; z-index: -50; pointer-events: none; }
  .tri-bg-wrap canvas { width: 100%; height: 100%; display: block; }
</style>

<div class="tri-bg-wrap">
  <canvas id="tri-bg"></canvas>
</div>

<script>
  if (typeof window !== 'undefined') {
    (async () => {
      // Load Trianglify ESM straight from CDN
      const mod = await import('https://cdn.jsdelivr.net/npm/trianglify@4.1.1/dist/trianglify.esm.js');
      const trianglify = mod.default || mod;

      const canvas = document.getElementById('tri-bg');
      if (!canvas) return;
      const ctx = canvas.getContext('2d');

      function sizeCanvas() {
        const dpr = window.devicePixelRatio || 1;
        canvas.width  = Math.floor(window.innerWidth  * dpr);
        canvas.height = Math.floor(window.innerHeight * dpr);
        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);
      }

      let hue = 205; // cool blue family
      function palette() {
        return Array.from({ length: 6 }, (_, i) => `hsl(${(hue + i * 5) % 360} 45% ${92 - i * 8}%)`);
      }

      function render() {
        const w = window.innerWidth;
        const h = window.innerHeight;
        const pattern = trianglify({
          width: w,
          height: h,
          cellSize: Math.max(80, Math.min(140, Math.floor(w / 12))),
          variance: 0.55,
          xColors: palette(),
          yColors: 'match',
          fill: true,
          strokeOpacity: 0.08,
          strokeWidth: 1,
        });
        pattern.toCanvas(canvas);
      }

      let raf;
      function tick() { hue = (hue + 0.02) % 360; render(); raf = requestAnimationFrame(tick); }
      function onResize() { sizeCanvas(); render(); }

      sizeCanvas();
      render();
      raf = requestAnimationFrame(tick);
      window.addEventListener('resize', onResize);

      addEventListener('astro:before-preload', () => {
        cancelAnimationFrame(raf);
        window.removeEventListener('resize', onResize);
      });
    })();
  }
</script>


